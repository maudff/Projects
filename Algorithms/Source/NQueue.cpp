#include "NQueue.h"

////////////////////////////////////////////////////////////////

NQueue::NQueue() :m_queue()
{

}

////////////////////////////////////////////////////////////////

unsigned NQueue::peek()
{
	return (isEmpty()) ? -1 : m_queue[0];
}

////////////////////////////////////////////////////////////////

void NQueue::dequeue()
{
	if (isEmpty())
	{
		std::cout << "Queue is empty" << std::endl;
	}
	else
	{
		m_queue.erase(m_queue.begin() + 0);
	}
}

////////////////////////////////////////////////////////////////

bool NQueue::isEmpty()
{
	return (m_queue.size() == 0) ? true : false;
}

////////////////////////////////////////////////////////////////

void NQueue::enqueue(unsigned vertex)
{
	m_queue.push_back(vertex);
}

////////////////////////////////////////////////////////////////